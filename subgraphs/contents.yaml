specVersion: 0.0.2
description: Rawrshak Network
repository: https://github.com/gcbsumid/rawrshak-graphnode
schema:
  file: ./contents.graphql
dataSources:
  - name: ContentFactory
    kind: ethereum/contract
    network: mainnet
    source:
      address: "0x851356ae760d987E095750cCeb3bC6014560891C"
      abi: ContentFactory
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/contents.ts
      entities:
        - Content
        - ContentManager
        - ContentStorage
      abis:
        - name: ContentFactory
          file: ../abis/ContentFactory.json
        - name: ContentManager
          file: ../abis/ContentManager.json
        - name: Content
          file: ../abis/Content.json
        - name: ContentStorage
          file: ../abis/ContentStorage.json
        - name: AccessControlManager
          file: ../abis/AccessControlManager.json
      eventHandlers:
        - event: ContractsDeployed(indexed address,indexed address)
          handler: handleContractsDeployed
templates:
  - name: Content
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Content
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/Contents.ts
      entities:
        - Content
      abis:
        - name: Content
          file: ../abis/Content.json
      eventHandlers:
        - event: TransferBatch(indexed address,indexed address,indexed address,uint256[],uint256[])
          handler: handleTransferBatch
        - event: TransferSingle(indexed address,indexed address,indexed address,uint256,uint256)
          handler: handleTransferSingle
        - event: Mint(address,(address,uint256[],uint256[],uint256,address,bytes))
          handler: handleMint
        - event: Burn(address,(address,uint256[],uint256[]))
          handler: handleBurn
        - event: ApprovalForAll(indexed address,indexed address,bool)
          handler: handleApprovalForAll
  - name: ContentStorage
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ContentStorage
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/Contents.ts
      entities:
        - Content
        - ContentStorage
      abis:
        - name: ContentStorage
          file: ../abis/ContentStorage.json
        - name: Content
          file: ../abis/Content.json
      eventHandlers:
        - event: AssetsAdded(indexed address,(uint256,string,string,uint256,address,uint24)[])
          handler: handleAssetsAdded
        - event: ContractRoyaltyUpdated(indexed address,address,uint24)
          handler: handleContractRoyaltyUpdated
        - event: HiddenUriUpdated(indexed address,indexed uint256,indexed uint256)
          handler: handleHiddenUriUpdated
        - event: PublicUriUpdated(indexed address,indexed uint256,indexed uint256)
          handler: handlePublicUriUpdated
        - event: TokenRoyaltyUpdated(indexed address,indexed uint256,address,uint24)
          handler: handleTokenRoyaltyUpdated
  - name: AccessControlManager
    kind: ethereum/contract
    network: mainnet
    source:
      abi: AccessControlManager
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ../src/Contents.ts
      entities:
        - AccessControlManager
      abis:
        - name: AccessControlManager
          file: ../abis/AccessControlManager.json
      eventHandlers:
        - event: RoleGranted(indexed bytes32,indexed address,indexed address)
          handler: handleRoleGranted
        - event: RoleRevoked(indexed bytes32,indexed address,indexed address)
          handler: handleRoleRevoked
