type AddressResolver @entity {
  id: ID!
  exchange: Exchange!
  tokenEscrow: TokenEscrow!
}

type Exchange @entity {
  id: ID!
  orders: [Order!]
  numOfOrders: BigInt
  numOfBuyOrders: BigInt
  numOfSellOrders: BigInt
}

type TokenEscrow @entity {
  id: ID!
  supportedTokens: [Token!] @derivedFrom(field: "escrow")
}

type Token @entity {
  id: ID!
  address: Bytes!
  escrow: TokenEscrow!
  totalVolume: BigInt
}

type Account @entity {
  id: ID!
  address: Bytes!
  orders: [Order!]! @derivedFrom(field: "owner")
}

type Order @entity {
  id: ID!
  asset: Asset!
  owner: Account!
  amountOrdered: BigInt
  amountFilled: BigInt
  status: OrderStatus
  dateCreated: BigInt
  dateFilled: BigInt
  dateCancelled: BigInt
  dateClaimed: BigInt
}

enum OrderStatus {
  Ready
  PartiallyFilled
  Filled
  Cancelled
  Claimed
}


type Asset @entity{
  id: ID!
  tokenId: BigInt!
  parentContract: Bytes!
  orders: [Order!] @derivedFrom(field: "asset")
}