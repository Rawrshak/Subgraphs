type ContractRegistry @entity {
  id: ID!
  craft: [Craft!]! @derivedFrom(field: "registry")
  salvage: [Salvage!]! @derivedFrom(field: "registry")
}

type Craft @entity {
  id: ID!
  registry: ContractRegistry!
  recipes: [Recipe!]! @derivedFrom(field: "parent")
  recipesCount: BigInt!
  craftCount: BigInt!
  craftTransactions: [CraftTransaction!]! @derivedFrom(field: "contract")
  parents: [Content!]!
}

type Recipe @entity {
  id: ID!
  recipeId: BigInt!
  enabled: Boolean!
  craftCount: BigInt!
  craftTransactions: [CraftTransaction!]! @derivedFrom(field: "recipe")
  parent: Craft!
}

type Salvage @entity {
  id: ID!
  registry: ContractRegistry!
  salvageableAssets: [SalvageableAsset!]! @derivedFrom(field: "parent")
  salvageableAssetsCount: BigInt!
  salvageCount: BigInt!
  salvageTransactions: [SalvageTransaction!]! @derivedFrom(field: "contract")
  parents: [Content!]!
}

type SalvageableAsset @entity {
  id: ID!
  content: Bytes!
  tokenId: BigInt!
  salvageId: BigInt!
  salvageCount: BigInt!
  salvageTransactions: [SalvageTransaction!]! @derivedFrom(field: "salvageableAsset")
  parent: Salvage!
}

type Content @entity {
  id: ID!
  craft: [Craft!]!
  salvage: [Salvage!]!
  craftContractCount: BigInt!
  salvageContractCount: BigInt!
}

type Account @entity {
  id: ID!
  craftTransactions: [CraftTransaction!]! @derivedFrom(field: "account")
  salvageTransactions: [SalvageTransaction!]! @derivedFrom(field: "account")
  craftCount: BigInt!
  salvageCount: BigInt!
}

type Transaction @entity {
  id: ID!
  blockNumber: BigInt!
  timestamp: BigInt!
  gasUSed: BigInt!
  gasPrice: BigInt!
}

type CraftTransaction @entity {
  id: ID!
  account: Account!
  transaction: Transaction!
  recipe: Recipe!
  contract: Craft!
  amount: BigInt!
}

type SalvageTransaction @entity {
  id: ID!
  account: Account!
  transaction: Transaction!
  salvageableAsset: SalvageableAsset!
  contract: Salvage!
  amount: BigInt!
}